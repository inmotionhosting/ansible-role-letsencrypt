---
# tasks file for ansible-role-letsencrypt

- name: Include variables and set facts
  ansible.builtin.include_tasks: facts.yml

- name: Install Let's Encrypt dependent packages
  ansible.builtin.package:
    name: "{{ certbot_packages }}"
    state: present
  when:
    - certbot_packages is defined
    - certbot_packages | length > 0
    - use_letsencrypt is defined
    - use_letsencrypt

# If site_domain doesn't point to the target host, Let's Encrypt is skipped
- name: Disable Let's Encrypt if DNS doesn't match
  ansible.builtin.set_fact:
    use_letsencrypt: false
  changed_when: dns_ip not in host_ips
  register: dns_check
  vars:
    dns_ip: "{{ lookup('dig', site_domain) }}"
    host_ips: "{{ ansible_all_ipv4_addresses }}"
  when:
    - use_letsencrypt is defined
    - use_letsencrypt
    - site_domain is defined
    - site_domain | length > 0
    - dns_ip not in host_ips

- name: Also retrieve certificate for www if DNS exists and matches
  vars:
    dns_ip: "{{ lookup('dig', 'www.' ~ site_domain) }}"
    host_ips: "{{ ansible_all_ipv4_addresses }}"
  ansible.builtin.set_fact:
    certbot_create_command: >-
      {{ certbot_package }} certonly
      --standalone
      --noninteractive
      --agree-tos
      --cert-name {{ site_domain }}
      --allow-subset-of-names
      {% if certbot_without_email | bool %}--register-unsafely-without-email{% else %}--email {{ site_email }}{% endif %}
      -d {{ site_domain ~ "," ~ "www." ~ site_domain }}
      {% if certbot_test_cert|bool %}--test-cert{% endif %}
      --pre-hook /etc/letsencrypt/renewal-hooks/pre/stop_services
      --post-hook /etc/letsencrypt/renewal-hooks/pre/start_services
  when:
    - use_letsencrypt is defined
    - use_letsencrypt
    - site_domain is defined
    - site_domain | length > 0
    - dns_ip in host_ips
    - not dns_check.changed

- name: Use Let's Encrypt if specified
  ansible.builtin.include_tasks: "letsencrypt.yml"
  when:
    - not dns_check.changed
    - use_letsencrypt is defined
    - use_letsencrypt
