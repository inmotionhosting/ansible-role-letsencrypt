---
- name: Install Certbot.
  ansible.builtin.package:
    name: "{{ certbot_package }}"
    state: present

- name: Check if certificate already exists.
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ site_domain }}/cert.pem"
  register: letsencrypt_cert
  when:
    - site_domain is defined
    - site_domain | length > 0

- name: Stop services to allow certbot to generate a cert.
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
  when:
    - not letsencrypt_cert.stat.exists
    - certbot_stop_services is defined
    - certbot_stop_services | length > 0
  with_items: "{{ certbot_stop_services | unique | sort }}"

- name: Generate new certificate if one doesn't exist.
  ansible.builtin.command: "{{ certbot_create_command }}"
  when:
    - not letsencrypt_cert.stat.exists
    - site_domain is defined
    - site_domain | length > 0

- name: Start services after cert has been generated.
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
  when:
    - not letsencrypt_cert.stat.exists
    - certbot_stop_services is defined
    - certbot_stop_services | length > 0
  with_items: "{{ certbot_stop_services | unique }}"

- name: Generate DH Parameters
  community.crypto.openssl_dhparam:
    path: "{{ dh_path }}"
    size: "{{ cipher_size }}"

- name: Creates a cron to renew letsencrypt certificates
  ansible.builtin.cron:
    name: letsencrypt cert renewal
    weekday: "0"
    minute: "0"
    hour: "1"
    user: root
    job: >-
      certbot renew
      --pre-hook '/usr/bin/monit unmonitor nginx; systemctl stop nginx'
      --post-hook 'systemctl start nginx; /usr/bin/monit monitor nginx'
    cron_file: certbot
